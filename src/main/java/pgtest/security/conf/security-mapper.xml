<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pgtest.security.dao.SecurityDao">

    <resultMap id="userMap" type="user">
         <id property="id" column="user_id"/>
         <result property="username" column="username"/>
         <result property="password" column="password"/>
         <result property="enabled" column="enabled"/>
         <result property="loginTries" column="login_tries"/>
         <collection property="roles" select="loadRolesForUser" column="user_id"/>
         <collection property="authorities" select="loadAuthoritiesForUser" column="user_id"/>
     </resultMap>

    <resultMap id="roleMap" type="role">
        <id property="id" column="role_id" />
        <result property="name" column="role_name" />
    </resultMap>

    <resultMap id="authorityMap" type="authority">
        <id property="id" column="authority_id" />
        <result property="authority" column="authority_name" />
    </resultMap>

    <select id="loadRolesForUser" resultMap="roleMap" parameterType="long">
        select * from sec_role where role_id in (select role_id from sec_user_role where user_id = #{user_id})
    </select>

    <select id="loadAuthoritiesForUser" resultMap="authorityMap" parameterType="long">
        select a.* from sec_authority a
          inner join sec_role_authority ra on a.authority_id = ra.authority_id
          inner join sec_user_role ur on ra.role_id = ur.role_id
          where ur.user_id = #{user_id}
    </select>


    <select id="loadAllRoles" resultMap="roleMap">
        select * from sec_role
    </select>

    <select id="loadAllUsers" resultMap="userMap">
        SELECT * FROM sec_user
    </select>

    <select id="loadUser" resultMap="userMap" parameterType="long">
        SELECT * FROM sec_user where user_id = #{user_id}
    </select>


    <select id="loadUserByUsername" resultMap="userMap" parameterType="string">
        SELECT * FROM sec_user where username = #{username}
    </select>

    <insert id="createUser" parameterType="user">
        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            select nextval('seq_user_id')
        </selectKey>
        INSERT INTO sec_user (user_id, username, password, enabled)
        VALUES (#{id},#{username}, #{password}, #{enabled})
    </insert>

    <update id="updateUser" parameterType="user">
        UPDATE sec_user
        SET
        username = #{username},
         password = #{password},
         enabled = #{enabled},
         login_tries = #{loginTries}
        where user_id = #{id}
    </update>


    <update id="increaseLoginTries" parameterType="long">
        UPDATE sec_user
        SET login_tries = login_tries+1
        where user_id = #{id}
    </update>

    <update id="updateLastLoginDate" parameterType="long">
        UPDATE sec_user
        SET last_login_date = current_time
        where user_id = #{id}
    </update>

    <delete id="deleteUser" parameterType="long">
        DELETE FROM sec_user
        WHERE user_id = #{user_id}
    </delete>

    <insert id="createUserRole" parameterType="map">
        INSERT INTO sec_user_role (user_id, role_id)
        VALUES (#{userId}, #{roleId})
    </insert>

</mapper>