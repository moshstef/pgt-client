<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <security:http auto-config="false" entry-point-ref="daep" use-expressions="true">
        <!--<security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter"/>-->
        <security:custom-filter position="FORM_LOGIN_FILTER" ref="usernamePasswordAuthenticationFilter"/>
         <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
        <security:intercept-url pattern="/cgi/secured/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/cgi/nonsecure/**" access="permitAll()"/>
        <security:access-denied-handler error-page="/cgi/forbidden"/>
        <security:session-management session-fixation-protection="newSession"/>
        <!--<security:request-cache ref="requestCache"/>-->
    </security:http>



    <bean id="daep" class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
        <constructor-arg>
            <map>
                <entry key="hasHeader('X-Requested-With','XMLHttpRequest')" value-ref="ajaxAuthenticationEntryPoint"/>
            </map>
        </constructor-arg>
        <property name="defaultEntryPoint" ref="loginUrlAuthenticationEntryPoint"/>
    </bean>


    <bean id="ajaxAuthenticationEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

    <bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/cgi/login"/>
    </bean>

    <bean id="logoutSuccessHandler" class="pgtest.security.handler.LogoutCustomSuccessHandler"/>
    <bean id="logoutHandler" class="pgtest.security.handler.LogoutCustomHandler">
<!--
        <property name="forgetMe" ref="rememberMeServices"/>
-->
    </bean>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg ref="logoutSuccessHandler"/>
        <constructor-arg ref="logoutHandler"/>
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="securityService">
            <security:password-encoder hash="md5"/>
        </security:authentication-provider>
<!--        <security:authentication-provider ref="rememberMeAuthenticationProvider">
        </security:authentication-provider>-->
    </security:authentication-manager>

    <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <property name="sessionRegistry" ref="sessionRegistry"/>
        <property name="expiredUrl" value="/cgi/login"/>
    </bean>

    <bean id="usernamePasswordAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="sessionAuthenticationStrategy" ref="sas"/>
<!--
        <property name="rememberMeServices" ref="rememberMeServices"/>
-->
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureHandler" ref="authenticationFailure"/>
        <property name="authenticationSuccessHandler" ref="authenticationSuccess"/>
        <property name="messageSource">
            <bean class="org.springframework.context.support.ResourceBundleMessageSource">
                <property name="basenames">
                    <list>
                        <value>messages/login-messages</value>
                    </list>
                </property>
            </bean>
        </property>

    </bean>

    <bean id="authenticationSuccess" class="pgtest.security.handler.LoginCustomSuccessHandler">
        <property name="securityService" ref="securityService" />
        <property name="auditService" ref="auditService" />
    </bean>

    <bean id="authenticationFailure" class="pgtest.security.handler.AuthenticationFailure">
        <property name="securityService" ref="securityService" />
    </bean>

    <bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
        <property name="maximumSessions" value="1"/>
        <property name="alwaysCreateSession" value="true"/>
    </bean>

    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>


    <bean id="passwordEncryption" class="pgtest.security.service.PasswordEncryption">
        <property name="algorithm" value="MD5"/>
        <property name="encoding" value="UTF-8"/>
    </bean>

    <bean id="securityService" class="pgtest.security.service.SecurityService">
        <property name="passwordEncryption" ref="passwordEncryption"/>
        <property name="securityDao" ref="securityDao"/>
    </bean>

    <bean id="securityDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="pgtest.security.dao.SecurityDao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>


</beans>